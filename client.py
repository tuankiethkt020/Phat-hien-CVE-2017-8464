import subprocess
import os
import array
from pathlib import Path
import socket
import tqdm
from time import sleep
SEPARATOR = "<SEPARATOR>"
BUFFER_SIZE = 4096
def convert(path):
    data = Path(path).read_bytes()
    out_hex = ['{:02X}'.format(d) for d in data]
    a1 =""
    for out in out_hex:
        a1 += str(out)
    data1 = bytes.fromhex(a1)
    data2 = data1.decode('utf-8', 'replace').encode('cp850','replace').decode('cp850')\
        .replace('\n','').replace('\t','')\
        .replace('\r','').replace('\\x', '')\
        .replace(',', '|')
    return data2

def check():
    while True:
        print("CHECK USB CONNECT")
        out = subprocess.check_output('wmic logicaldisk get  DriveType, caption', shell=True)
        sleep(3)
        for drive in str(out).strip().split('\\r\\r\\n'):
            if '2' in drive:
                drive_litter = drive.split(':')[0]
                drive_type = drive.split(':')[1].strip()
                #print(drive_litter, drive_type)
                if drive_type == '2':
                    print('Removable disk detected')
                    return drive_litter 
    
drive_litter= check()
print("USB :",drive_litter)
f=open('listfile.txt',"w")
a = str(drive_litter)+":\\"
print(a)
payload1 = ""
for root, dirs, files in os.walk(a):
    for dir in dirs:
        for file in files:
            #print(file)
            f.write(os.path.join(root, file) + '\n')
            if "dll" in str(os.path.join(root, file)):
                payload1 = file.replace('.',"")
f.close()

print("payload1 +++++++  " + payload1)

print("=====================================")
f=open('data.txt',"w")
payloadLNK = payload1+"FlashPlayer"
payloadDLL = ["MZ","rundll32.exe","KERNEL32.dll","This program cannot be run in DOS mode"]
for root, dirs, files in os.walk(a):
    for dir in dirs:
        for file in files:
            print(os.path.join(root, file))
            path = os.path.join(root, file)
            #print(data)
            a = convert(path)
            #print(a)
            s1="".join(c for c in a if c.isalpha())
            #print(s1)
            if payloadLNK in s1:
                print("LNK payload")
                f.write("File LNK PAYLOAD:" + os.path.join(root, file)+":"+a+"\n")
            elif "MZ" and "rundll32.exe" and "KERNEL32.dll" and "This program cannot be run in DOS mode" in s1:
                print("DLL payload")
                f.write("File DLL MADOC:" + os.path.join(root, file)+":"+a+"\n")
            else:
                print("FILE BINH THUONG")
                f.write("File SAFE:" + os.path.join(root, file)+":"+a+"\n")
f.close()

if os.path.isfile("data.txt"):
    print("co file data.txt")                 
    port = 1235
    filename = "data.txt"
    filesize = os.path.getsize(filename)
    # connection to hostname on the port.
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
    print(f"[+] Connecting to 192.168.1.5:{port}")
    s.connect(('192.168.1.5', port))                               
    print("[+] Connected.")
    s.send(f"{filename}{SEPARATOR}{filesize}".encode())
    progress = tqdm.tqdm(range(filesize), f"Sending {filename}", unit="B", unit_scale=True, unit_divisor=1024)
    with open(filename, "rb") as f:
        while True:
            bytes_read = f.read(BUFFER_SIZE)
            if not bytes_read:
                break
            s.sendall(bytes_read)
            progress.update(len(bytes_read))
    s.close()

# payloadDLL = ["MZ","rundll32.exe","KERNEL32.dll","This program cannot be run in DOS mode"]
# s1 = "MZThis program cannot be run in DOS moderundll32.exeKERNEL32.dll"
# result = "rundll32.exe" in payloadDLL
# # i = True
# # for string in payloadDLL:
# #     if string in s1:
# #         print(i)
# #     else:
# #         i = False
# #         print(i)

# if "MZ" and "rundll32.exe" and "KERNEL32.dll" and "This program cannot be run in DOS mode" in s1:
#     print("aaaaaaaa")
